---
apiVersion: v1
kind: Service
metadata:
  name: front-end
  labels:
    name: front-end
  namespace: sock-shop
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30001
  selector:
    name: front-end
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: front-end
  namespace: sock-shop
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: front-end
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - front-end
              topologyKey: kubernetes.io/hostname
      containers:
      - name: front-end
        image: weaveworksdemos/front-end:0.3.12
        resources:
          limits:
            cpu: 300m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 300Mi
        ports:
        - containerPort: 8079
        env:
        - name: SESSION_REDIS
          value: "true"
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /
            port: 8079
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8079
          periodSeconds: 3
      - name: nginx-sidecar
        image: nginx:1.12
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
          - containerPort: 80
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 3
        volumeMounts:
        - name: front-end-config-volume
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: front-end-config-volume
        configMap:
          name: front-end
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: front-end
data:
  socks.lukeaddison.co.uk.conf: |
    upstream front-end {
      server localhost:8079;
    }

    server {
      listen 80;
      server_name socks.lukeaddison.co.uk;
      root /var/www/html;

      # Proxy the health check to the upstream server at /
      location /healthz {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_next_upstream error;
        proxy_pass http://front-end/;
        break;
      }

      # Proxy everything else to the upstream server, enforcing HTTPS
      location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_next_upstream error;

        # Any request that did not originally come in over HTTPS gets redirected
        if ($http_x_forwarded_proto != "https") {
          rewrite ^(.*)$ https://$server_name$1 permanent;
        }

        proxy_pass http://front-end;

        # Add HTTP Strict Transport Security for good measure.
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";
      }
    }
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: front-end
  namespace: sock-shop
spec:
  maxReplicas: 5
  minReplicas: 2
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: front-end
  targetCPUUtilizationPercentage: 80
