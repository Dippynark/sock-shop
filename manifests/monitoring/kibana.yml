---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    name: kibana
  namespace: monitoring
spec:
  type: NodePort
  ports:
  - port: 5601
    targetPort: 80
    nodePort: 31601
  selector:
    name: kibana
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
  namespace: monitoring
  labels:
    name: kibana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: kibana
    spec:
      containers:
      - image: kibana:5.5.0
        name: kibana
        ports:
          - name: kibana
            containerPort: 5601
        resources:
          limits:
            cpu: 100m
          requests:
            cpu: 100m
        readinessProbe:
          httpGet:
            path: /
            port: 5601
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /
            port: 5601
          initialDelaySeconds: 60
          periodSeconds: 3
      - name: nginx-sidecar
        image: nginx:1.12
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
          - containerPort: 80
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 3
        volumeMounts:
        - name: nginx-sidecar-config
          mountPath: /etc/nginx/conf.d
        - name: nginx-basic-auth
          mountPath: /mnt
      volumes:
      - name: nginx-basic-auth
        secret:
          secretName: basic-auth
      - name: nginx-sidecar-config
        configMap:
          name: kibana-nginx-sidecar
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-nginx-sidecar
  namespace: monitoring
data:
  kibana.socks.lukeaddison.co.uk.conf: |
    upstream kibana {
      server localhost:5601;
    }

    server {
      listen 80;
      server_name kibana.socks.lukeaddison.co.uk;
      root /var/www/html;

      # Proxy the health check to the upstream server at /
      location /healthz {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_next_upstream error;
        proxy_pass http://kibana/;
        break;
      }

      # Proxy everything else to the upstream server, enforcing HTTPS
      location / {

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_next_upstream error;

        # Any request that did not originally come in over HTTPS gets redirected
        if ($http_x_forwarded_proto != "https") {
          rewrite ^(.*)$ https://$server_name$1 permanent;
        }             

        # Enable basic auth
        auth_basic "Restricted";                                
        auth_basic_user_file /mnt/.htpasswd;

        proxy_pass http://kibana;

        # Add HTTP Strict Transport Security for good measure.
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";
      }
    }
